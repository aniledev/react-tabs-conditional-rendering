{"version":3,"sources":["Tabs.js","App.js","index.js"],"names":["Tabs","state","currentTabIndex","handleClick","index","console","log","setState","this","props","tabs","map","tab","onClick","name","currentTab","className","content","renderButtons","length","renderContent","React","Component","defaultProps","tabsProp","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAIqBA,E,4MAGnBC,MAAQ,CACNC,gBAAiB,G,EAGnBC,YAAc,SAACC,GACbC,QAAQC,IAAI,WAAY,CAAEF,UAC1B,EAAKG,SAAS,CAAEL,gBAAiBE,K,8DAGlB,IAAD,OAEd,OAAOI,KAAKC,MAAMC,KAAKC,KAAI,SAACC,EAAKR,GAAN,OACzB,wBAAoBS,QAAS,kBAAM,EAAKV,YAAYC,IAApD,SACGQ,EAAIE,MADMV,Q,sCAMD,IAENF,EAAoBM,KAAKP,MAAzBC,gBACFa,EAAaP,KAAKC,MAAMC,KAAKR,GACnC,OAAO,qBAAKc,UAAU,UAAf,SAA0BD,EAAWE,Y,+BAI5C,OACE,gCACGT,KAAKU,kBAGHV,KAAKC,MAAMC,KAAKS,QAAUX,KAAKY,uB,GAlCRC,IAAMC,WAAnBtB,EACZuB,aAAe,CAAEb,KAAM,ICFhC,IAAMc,EAAW,CACf,CACEV,KAAM,YACNG,QACE,uQAEJ,CACEH,KAAM,aACNG,QACE,uQAEJ,CACEH,KAAM,YACNG,QACE,wQAaSQ,MATf,WACE,OACE,sBAAKT,UAAU,MAAf,UACE,6DACA,cAAC,EAAD,CAAMN,KAAMc,QCpBlBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f83b98ed.chunk.js","sourcesContent":["// I'M UNSURE ABOUT LINE 39 AND HOW THAT CONDTIONAL LOGIC FUNCTIONS\n\nimport React from \"react\";\n\nexport default class Tabs extends React.Component {\n  static defaultProps = { tabs: [] };\n\n  state = {\n    currentTabIndex: 0,\n  };\n\n  handleClick = (index) => {\n    console.log(\"clicked!\", { index });\n    this.setState({ currentTabIndex: index });\n  };\n\n  renderButtons() {\n    // map off the tabs array that was passed from App to make an array of buttons\n    return this.props.tabs.map((tab, index) => (\n      <button key={index} onClick={() => this.handleClick(index)}>\n        {tab.name}\n      </button>\n    ));\n  }\n\n  renderContent() {\n    // access the first tab from props array\n    const { currentTabIndex } = this.state;\n    const currentTab = this.props.tabs[currentTabIndex];\n    return <div className=\"content\">{currentTab.content}</div>;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderButtons()}\n        {/* Display the first tab content by default */}\n        {/* Use the logical and operator to only show content when the tabs array has length, this avoids this.props.currentTab from being undefined*/}\n        {!!this.props.tabs.length && this.renderContent()}\n      </div>\n    );\n  }\n}\n","import Tabs from \"./Tabs\";\n\n// test props are array of objects each with a name and content\nconst tabsProp = [\n  {\n    name: \"First tab\",\n    content:\n      \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Laboriosam exercitationem quos consectetur expedita consequatur. Fugit, sapiente aspernatur corporis velit, dolor eum reprehenderit provident ipsam, maiores incidunt repellat! Facilis, neque doloremque.\",\n  },\n  {\n    name: \"Second tab\",\n    content:\n      \"Laboriosam exercitationem quos consectetur expedita consequatur. Fugit, sapiente aspernatur corporis velit, dolor eum reprehenderit provident ipsam, maiores incidunt repellat! Facilis, neque doloremque. Lorem ipsum dolor sit amet consectetur adipisicing elit.\",\n  },\n  {\n    name: \"Third tab\",\n    content:\n      \"Fugit, sapiente aspernatur corporis velit, dolor eum reprehenderit provident ipsam, maiores incidunt repellat! Facilis, neque doloremque. Lorem ipsum dolor sit amet consectetur adipisicing elit. Laboriosam exercitationem quos consectetur expedita consequatur.\",\n  },\n];\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2>React Conditional Rendering</h2>\n      <Tabs tabs={tabsProp} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n/* \n-build a Tabs component using both props and state together \n-it should accept one prop named tabs\n-the tabs prop is an array of objects\n-each item in the array has a name and content keys which are both strings\n-the tabs prop should be used to generate a row of buttons\neach button uses the tab object's name as its text\n-when you click on a tab button, it opens the tab\n-it shows a section underneath the buttons row\n-the section contains the content for the opened tab\n-the componentshould show the first tab content by default\n*/\n"],"sourceRoot":""}